apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment-webserver
  labels:
    app: {{ .Release.Name }}-webserver
spec:
  replicas: {{ .Values.replicaCounts }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-webserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-webserver
    spec:
      containers:
      - name: {{ .Release.Name }}-webserver
        image: {{ .Values.container.webserverImage}} 
        resources:
          limits:
            cpu: "500m"
            memory: "1G"
          requests:
            cpu: "100m"
            memory: "500Mi"
        ports:
          - containerPort: 80
            # hostPort: 80

        # command:
        #   - tail
        #   - -f
        #   - /etc/hosts

        volumeMounts:
        - mountPath: /etc/nginx/conf.d/ 
          name: nginx-conf

      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf

        
    
--- 
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-webserver
spec:
  selector:
    app: {{ .Release.Name }}-webserver
  # type: NodePort
  ports:
  - name      : {{ .Release.Name }}-webserver
    protocol  : TCP 
    port      : 80
    targetPort: 80
            

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  redirect.conf: |
    server {
      listen 80 default_server;
          
      location / {
        # proxy_pass http://frontend:8080;
        proxy_pass http://{{ .Release.Name }}-api-server:8000;
      }
    }

