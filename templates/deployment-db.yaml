apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment-db
  labels:
    app: {{ .Release.Name }}-db  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-db
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-db
    spec:
      containers:
      - name: db
        image: rudstanislav/postgres:v5
        resources:
          limits:
            cpu: "500m"
            memory: "128Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        ports:
          - containerPort: 5432
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
            readOnly: false
          - name: pgsql-config
            mountPath: /etc/postgresql
            subPath: postgresql.conf
            readOnly: false
      volumes: 
      - name: data
        persistentVolumeClaim:
          claimName: my-claim
      - name: pgsql-config
        configMap:
          name: pgsql-config
          items:
            - key: postgresql.conf
              path: postgresql.conf
--- 
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-db
spec:
  selector:
    app: {{ .Release.Name }}-db
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432

